services:
  frontend:
    build: ../frontend
    image: ghcr.io/microsoft/tim-data-investigate-platform/frontend
    ports:
      - 80:80
    networks:
      - front-tier
      - back-tier
    environment:
      - AUTH_CLIENT_ID
      - AUTH_TENANT_ID
      - REDIRECT_URI
      - API_BASEPATH
      - BACKEND_URI
      - AGGRID_LICENSE
      - KUSTO_CLUSTER_URI
      - KUSTO_DATABASE_NAME
    command: '/bin/sh -c "nginx -g \"daemon off; error_log stderr;\""'

  backend:
    build: ../backend
    restart: always
    image: ghcr.io/microsoft/tim-data-investigate-platform/backend
    depends_on:
      - couchbase
    ports:
      - 8080:80
    networks:
      - back-tier
    environment:
      - SIGNING_KEY
      - AUTH_USERNAME
      - AUTH_PASSWORD
      - AUTH_TENANT_ID
      - AUTH_CLIENT_ID
      - AUTH_CLIENT_SECRET
      - AZURE_CLIENT_ID
      - AZURE_TENANT_ID
      - AZURE_CLIENT_SECRET
      - COUCHBASE_CONNECTION_STRING
      - COUCHBASE_USER_NAME
      - COUCHBASE_USER_PASSWORD
      - COUCHBASE_DATABASE_NAME
      - KUSTO_INGEST_URL
      - KUSTO_CLUSTER_URI
      - KUSTO_DATABASE_NAME
      - REDIS_CONNECTION_STRING
      - MONGO_CONNECTION_STRING
      - MONGO_DATABASE_NAME
      - MONGO_WITH_COSMOSDB
      - DATABASE_TYPE

  couchbase:
    image: couchbase:community
    restart: always
    deploy:
      resources:
        limits:
          memory: 6144M
    networks:
      - back-tier
    ports:
      - 8091-8096:8091-8096
      - 11210-11211:11210-11211
    volumes:
      - ./db_data/couchbase_data:/opt/couchbase/var
    tty: true

volumes:
  db-data:
    driver: local

networks:
  # The presence of these objects is sufficient to define them
  front-tier: {}
  back-tier: {}
